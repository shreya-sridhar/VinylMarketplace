{"ast":null,"code":"var _jsxFileName = \"/home/shreyamohak/vinyl/vinyl-mp-frontend/vinyl-mp-frontend/src/containers/MainContainer.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Footer from '../components/Footer.js';\nimport RecordPage from './RecordPage.js';\nimport NavBar from \"./NavBar\";\nimport NotFound from \"../components/NotFound\";\nimport Main from \"../pages/main/Main\";\nimport Messages from \"../pages/main/Messages\";\nimport Login from \"./Login\";\nimport History from \"./History\";\nimport Cart from \"./Cart\";\nimport UserHome from \"../containers/UserHome\";\nimport Friends from \"./ChatFriends\";\nimport AllRecords from \"../pages/all-records/AllRecords\";\nimport { Route, Switch, Redirect, Link } from \"react-router-dom\";\nimport { withRouter } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = \"http://localhost:3001/\";\n\nclass MainContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      records: [],\n      users: [],\n      sell_records: [],\n      cover: true,\n      page: 1,\n      recordPage: 0,\n      user1Page: 0,\n      user2Page: 0,\n      user: {},\n      error: false,\n      orders: [],\n      order_records: [],\n      redirect: false\n    };\n\n    this.persistUser = token => {\n      fetch(API + `profile`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(resp => resp.json()).then(data => {\n        if (data.user) {\n          const {\n            username,\n            id\n          } = data.user;\n          this.setState({\n            user: {\n              username,\n              id\n            }\n          });\n        }\n      });\n    };\n\n    this.handleTabClick = tab => {\n      let newPage;\n\n      if (tab === \"friends\") {\n        newPage = 2;\n      } else if (tab === \"favorites\") {\n        newPage = 3;\n      } else {\n        newPage = 1;\n      }\n\n      this.setState({\n        page: newPage\n      });\n    };\n\n    this.handleClick = () => {\n      let newCover = !this.state.cover[0];\n      let newTitle;\n\n      if (this.state.cover[1] === \"View Album Cover\") {\n        newTitle = \"View List Of Songs\";\n      } else {\n        newTitle = \"View Album Cover\";\n      }\n\n      this.setState({\n        cover: [newCover, newTitle]\n      });\n    };\n\n    this.handleRightClick = (pg, n) => {\n      let changePage = pg + `Page`;\n      let pageNum = this.state[changePage] + 4;\n\n      if (pageNum >= n) {\n        pageNum = 0;\n      }\n\n      this.setState({\n        [`${changePage}`]: pageNum\n      });\n    };\n\n    this.handleLeftClick = (pg, n) => {\n      let changePage = pg + `Page`;\n      let pageNum = this.state[changePage] - 4;\n\n      if (pageNum <= 0) {\n        pageNum = n - 4;\n      }\n\n      this.setState({\n        [`${changePage}`]: pageNum\n      });\n    };\n\n    this.setRedirect = () => {\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 12\n        }, this);\n      }\n    };\n\n    this.addToCart = rec => {\n      debugger;\n\n      if (!localStorage.token) {\n        debugger;\n        alert('Please login before adding to cart');\n      } else {\n        debugger;\n        alert(rec.name + ' has been added to your cart!');\n        let user_find = this.state.orders.filter(order => order.user.id === this.state.user.id && order.status === 'pending'); // change to single element later\n\n        if (user_find.length === 0) {\n          fetch(\"http://localhost:3001/orders\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              user_id: this.state.user.id,\n              status: 'pending',\n              total_sum: 0.0\n            })\n          }).then(resp => resp.json()).then(data => {\n            // let newOrders = this.state.order.concat(data)\n            // this.setState({orders:newOrders})\n            this.createOrderRecord(data);\n          });\n        } else {\n          this.createOrderRecord(rec);\n        }\n      }\n    };\n\n    this.createOrderRecord = rec => {\n      debugger;\n      let currOrder = this.state.orders.filter(order => order.user.id === this.state.user.id && order.status === 'pending')[0]; // change to single element later\n\n      fetch(\"http://localhost:3001/order_records\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          order_id: currOrder.id,\n          record_id: rec.id\n        })\n      }).then(resp => resp.json()).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.handleAuthResponse = data => {\n      if (data.message === \"Invalid username or password\") {\n        this.props.history.push(\"/signup\");\n      } else {\n        if (data.user) {\n          const {\n            username,\n            id\n          } = data.user;\n          const token = data.jwt;\n          this.setState({\n            user: {\n              username,\n              id\n            },\n            error: null\n          });\n          localStorage.setItem(\"token\", token);\n          this.props.history.push(\"/records\");\n        } else if (data.error) {\n          this.setState({\n            error: data.error\n          });\n        }\n      }\n    };\n\n    this.handleLogin = (e, user) => {\n      e.preventDefault();\n      fetch(API + `login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: user.username,\n          password: user.password,\n          bio: \"\"\n        })\n      }).then(resp => resp.json()).then(data => {\n        this.handleAuthResponse(data);\n      }).catch(console.log);\n    };\n\n    this.handleSignup = (e, user) => {\n      e.preventDefault();\n      fetch(API + `/signup`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user: user\n        })\n      }).then(resp => resp.json()).then(data => {\n        this.handleAuthResponse(data);\n      }).catch(console.log);\n    };\n\n    this.handleLogout = () => {\n      localStorage.clear();\n      this.setState({\n        user: {}\n      });\n    };\n\n    this.sendMessage = (e, state) => {\n      fetch(\"http://localhost:3002/messages\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          content: state.message\n        })\n      }).then(resp => resp.json()).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.renderLoginPage = () => /*#__PURE__*/_jsxDEV(Login, {\n      handleLoginOrSignup: this.handleLogin,\n      act: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 26\n    }, this);\n\n    this.renderSignUpPage = () => /*#__PURE__*/_jsxDEV(Login, {\n      handleLoginOrSignup: this.handleSignup,\n      act: \"signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 27\n    }, this);\n\n    this.renderMessages = () => /*#__PURE__*/_jsxDEV(Messages, {\n      sendMessage: this.sendMessage,\n      user: this.state.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 25\n    }, this);\n\n    this.renderHistory = () => /*#__PURE__*/_jsxDEV(History, {\n      order_records: this.state.order_records\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 24\n    }, this);\n\n    this.changeCartStatus = () => {\n      let order_find = this.state.orders.find(order => order.user.id === this.state.user.id && order.status === 'pending').id; // change to single element later\n\n      fetch(`http://localhost:3001/orders/${order_find}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          status: \"complete\"\n        })\n      }).then(resp => resp.json()).then(data => console.log);\n    };\n\n    this.deleteRecord = order_rec => {\n      fetch(`http://localhost:3001/order_records/${order_rec.id}`, {\n        method: 'DELETE'\n      }).then(res => res.json()).then(res => {\n        console.log(res);\n      });\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.token;\n\n    if (token) {\n      this.persistUser(token);\n    }\n\n    fetch(\"http://localhost:3001/users\").then(res => res.json()).then(data1 => fetch(\"http://localhost:3001/records\").then(res => res.json()).then(data2 => fetch(\"http://localhost:3001/sell_records\").then(res => res.json()).then(data3 => fetch(\"http://localhost:3001/order_records\").then(res => res.json()).then(data4 => fetch(\"http://localhost:3001/orders\").then(res => res.json()).then(data5 => {\n      this.setState({\n        users: data1,\n        records: data2,\n        sell_records: data3,\n        order_records: data4,\n        orders: data5\n      });\n    })))));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        user: this.state.user,\n        handleLogout: this.handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/messages\",\n          render: this.renderMessages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/records\",\n          component: AllRecords\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          render: this.renderLoginPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          render: this.renderSignUpPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/history\",\n          render: this.renderHistory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/users/:slug\",\n          render: routerProps => {\n            let user = this.state.users.find(user => user.id == routerProps.match.params.slug);\n            return user ? /*#__PURE__*/_jsxDEV(UserHome, {\n              user: user,\n              users: this.state.users,\n              records: this.state.records,\n              nums: this.state.records.length,\n              content1: \"Recently Bought\",\n              content2: \"Currently Selling\",\n              size: 200,\n              page: this.state.page,\n              handleTabClick: this.handleTabClick,\n              handleRightClick: this.handleRightClick,\n              handleLeftClick: this.handleLeftClick,\n              user1Page: this.state.user1Page,\n              sell_records: this.state.sell_records,\n              user2Page: this.state.user2Page\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 26\n            }, this) : null;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/records/:slug\",\n          render: routerProps => {\n            return /*#__PURE__*/_jsxDEV(RecordPage, {\n              record_id: routerProps.match.params.slug,\n              records: this.state.records,\n              handleClick: this.handleClick,\n              cover: this.state.cover,\n              handleRightClick: this.handleRightClick,\n              handleLeftClick: this.handleLeftClick,\n              sell_records: this.state.sell_records,\n              user: this.state.user,\n              deleteRecord: this.deleteRecord,\n              changeCartStatus: this.changeCartStatus,\n              addToCart: this.addToCart,\n              recordPage: this.state.recordPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 32\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/cart/:slug\",\n          render: routerProps => {\n            debugger;\n            let user = this.state.users.find(u => u.id == routerProps.match.params.slug);\n            return user ? /*#__PURE__*/_jsxDEV(Cart, {\n              user: user,\n              deleteRecord: this.deleteRecord,\n              changeCartStatus: this.changeCartStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 26\n            }, this) : null;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/friends\",\n          component: Friends\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          component: NotFound\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(MainContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/shreyamohak/vinyl/vinyl-mp-frontend/vinyl-mp-frontend/src/containers/MainContainer.js"],"names":["React","Footer","RecordPage","NavBar","NotFound","Main","Messages","Login","History","Cart","UserHome","Friends","AllRecords","Route","Switch","Redirect","Link","withRouter","API","MainContainer","Component","state","records","users","sell_records","cover","page","recordPage","user1Page","user2Page","user","error","orders","order_records","redirect","persistUser","token","fetch","method","headers","Authorization","then","resp","json","data","username","id","setState","handleTabClick","tab","newPage","handleClick","newCover","newTitle","handleRightClick","pg","n","changePage","pageNum","handleLeftClick","setRedirect","renderRedirect","addToCart","rec","localStorage","alert","name","user_find","filter","order","status","length","body","JSON","stringify","user_id","total_sum","createOrderRecord","currOrder","order_id","record_id","console","log","handleAuthResponse","message","props","history","push","jwt","setItem","handleLogin","e","preventDefault","password","bio","catch","handleSignup","handleLogout","clear","sendMessage","content","renderLoginPage","renderSignUpPage","renderMessages","renderHistory","changeCartStatus","order_find","find","deleteRecord","order_rec","res","componentDidMount","data1","data2","data3","data4","data5","render","routerProps","match","params","slug","u"],"mappings":"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","sourcesContent":["import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Footer from '../components/Footer.js'\nimport RecordPage from './RecordPage.js'\nimport NavBar from \"./NavBar\"\nimport NotFound from \"../components/NotFound\"\nimport Main from \"../pages/main/Main\"\nimport Messages from \"../pages/main/Messages\"\nimport Login from \"./Login\"\nimport History from \"./History\"\nimport Cart from \"./Cart\"\nimport UserHome from \"../containers/UserHome\"\nimport Friends from \"./ChatFriends\"\nimport AllRecords from \"../pages/all-records/AllRecords\";\nimport {Route, Switch, Redirect, Link} from \"react-router-dom\";\nimport {withRouter} from 'react-router'\nconst API = \"http://localhost:3001/\"\n\nclass MainContainer extends React.Component {\n\n  state = {\n    records:[],\n    users:[],\n    sell_records:[],\n    cover:true,\n    page:1,\n    recordPage:0,\n    user1Page:0,\n    user2Page:0,\n    user: {},\n    error: false,\n    orders:[],\n    order_records:[],\n    redirect:false\n  }\n\n  componentDidMount() {\n    const token = localStorage.token;\n    if (token) {\n      this.persistUser(token);\n    }\n\n    fetch(\"http://localhost:3001/users\")\n    .then(res => res.json())\n    .then(data1 => fetch(\"http://localhost:3001/records\")\n    .then(res => res.json())\n    .then(data2 => fetch(\"http://localhost:3001/sell_records\")\n    .then(res => res.json())\n    .then(data3 => fetch(\"http://localhost:3001/order_records\")\n    .then(res => res.json())\n    .then(data4 => fetch(\"http://localhost:3001/orders\")\n    .then(res => res.json())\n    .then(data5 => {\n      this.setState(\n        {\n        users:data1,\n        records:data2,\n        sell_records:data3,\n        order_records:data4,\n        orders:data5\n      })\n      }\n      )\n      ))))\n    }\n\npersistUser = (token) => {\n  \n  fetch(API +  `profile`, {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((resp) => resp.json())\n    .then((data) => {\n      if (data.user) {\n        const { username, id } = data.user;\n        this.setState({\n          user: {\n            username,\n            id,\n          },\n        });\n      }\n    });\n};\n\n\nhandleTabClick = (tab) => {\n  let newPage\n  if (tab === \"friends\") {\n      newPage = 2\n  } else if (tab === \"favorites\") {\n      newPage = 3\n  } else {\n      newPage = 1\n  }\n  this.setState({\n      page: newPage\n  })\n}\n\nhandleClick = () => {\n  let newCover = !this.state.cover[0]\n  let newTitle\n  if (this.state.cover[1]===\"View Album Cover\")\n  {\n   newTitle = \"View List Of Songs\"\n  }\n  else\n  {\n   newTitle = \"View Album Cover\"\n  }\n  this.setState({\n    cover:[newCover,newTitle]\n  })\n }\n\n handleRightClick = (pg,n) => {\n   let changePage = pg + `Page`\n   let pageNum = this.state[changePage] + 4\n   if (pageNum >= n)\n     {pageNum = 0}\n   this.setState({\n     [`${changePage}`]: pageNum\n   })\n }\n\n handleLeftClick = (pg,n) => {\n   let changePage = pg + `Page`\n   let pageNum = this.state[changePage] - 4\n   if (pageNum <= 0)\n     {pageNum = n-4}\n   this.setState({\n     [`${changePage}`]: pageNum\n   })\n }\n\nsetRedirect = () => {\n  this.setState({\n    redirect: true\n  })\n}\nrenderRedirect = () => {\n  if (this.state.redirect) {\n    return <Redirect to='/login' />\n  }\n}\n\n addToCart = (rec) => {\n   debugger\n  if (!localStorage.token)\n  {\n    debugger\n   alert('Please login before adding to cart');\n  }\nelse\n{\n  debugger\n   alert(rec.name + ' has been added to your cart!');\n   let user_find = this.state.orders.filter((order) => order.user.id === this.state.user.id  && order.status === 'pending')\n   // change to single element later\n   if (user_find.length === 0)\n   {\n\n     fetch(\"http://localhost:3001/orders\", {\n       method: \"POST\",\n       headers: {\n         \"Content-Type\": \"application/json\",\n       },\n       body: JSON.stringify({user_id:this.state.user.id,status:'pending',total_sum:0.0}),\n     })\n       .then((resp) => resp.json())\n       .then((data) => {\n\n         // let newOrders = this.state.order.concat(data)\n         // this.setState({orders:newOrders})\n         this.createOrderRecord(data);\n       })\n   }\n   else\n   {\n\n     this.createOrderRecord(rec);\n   }}\n }\n\n\n    createOrderRecord = (rec) => {\n      debugger\n        let currOrder = this.state.orders.filter((order) => order.user.id === this.state.user.id && order.status === 'pending')[0]\n        // change to single element later\n        fetch(\"http://localhost:3001/order_records\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({order_id: currOrder.id, record_id: rec.id}),\n        })\n            .then((resp) => resp.json())\n            .then((data) => {\n                console.log(data)\n            })\n    }\n\n\n handleAuthResponse = (data) => {\n   if (data.message === \"Invalid username or password\")\n   {\n    this.props.history.push(\"/signup\");\n   }\n   else\n   {\n   if (data.user) {\n     const { username, id} = data.user;\n     const token = data.jwt\n     this.setState({\n       user: {\n         username,\n         id,\n       },\n       error: null,\n     });\n\n     localStorage.setItem(\"token\", token);\n     this.props.history.push(\"/records\");\n   } else if (data.error) {\n     this.setState({\n       error: data.error,\n     });\n   }}\n };\n\n handleLogin = (e, user) => {\n   e.preventDefault();\n   fetch(API + `login`, {\n     method: \"POST\",\n     headers: {\n       \"Content-Type\": \"application/json\",\n     },\n     body: JSON.stringify({username:user.username,password:user.password,bio:\"\"}),\n   })\n     .then((resp) => resp.json())\n     .then((data) => {\n       this.handleAuthResponse(data);\n     })\n     .catch(console.log);\n };\n\n handleSignup = (e, user) => {\n   e.preventDefault();\n\n   fetch(API + `/signup`, {\n     method: \"POST\",\n     headers: {\n       \"Content-Type\": \"application/json\",\n     },\n     body: JSON.stringify({ user: user }),\n   })\n     .then((resp) => resp.json())\n     .then((data) => {\n       this.handleAuthResponse(data);\n     })\n     .catch(console.log);\n };\n\n handleLogout = () => {\n   localStorage.clear();\n   this.setState({ user: {} });\n };\n\n sendMessage = (e,state) => {\n\n  fetch(\"http://localhost:3002/messages\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n\n    },\n    body: JSON.stringify({content:state.message}),\n  })\n    .then((resp) => resp.json())\n    .then((data) => {\n\n      console.log(data)\n    })\n }\n\n renderLoginPage = () => <Login handleLoginOrSignup={this.handleLogin} act=\"login\" />;\n renderSignUpPage = () => <Login handleLoginOrSignup={this.handleSignup} act=\"signup\"/>;\n renderMessages = () => <Messages sendMessage={this.sendMessage} user = {this.state.user}/>\n renderHistory = () => <History order_records={this.state.order_records}/>\n\n changeCartStatus = () => {\n   let order_find = this.state.orders.find((order) => order.user.id === this.state.user.id  && order.status === 'pending').id\n   // change to single element later\n  \n   fetch(`http://localhost:3001/orders/${order_find}`, {\n     method: \"PATCH\",\n     headers: {\n       \"Content-Type\": \"application/json\",\n     },\n     body: JSON.stringify({status:\"complete\"}),\n   })\n     .then((resp) => resp.json())\n     .then((data) => \n     console.log)\n }\n\n deleteRecord = (order_rec) => {\n   fetch(`http://localhost:3001/order_records/${order_rec.id}`, {\n     method: 'DELETE',\n   })\n   .then(res => res.json()) \n   .then(res => {console.log(res)})\n   }\n\n\n   render(){ \n    return (\n    <div>\n        <NavBar user={this.state.user}\n                handleLogout={this.handleLogout}\n        />\n        <Switch>\n            <Route exact path=\"/\" component={Main} />\n            <Route exact path=\"/messages\" render={this.renderMessages} />\n            <Route exact path=\"/records\" component = {AllRecords} />\n\n            <Route path=\"/login\" render={this.renderLoginPage} />\n            <Route path=\"/signup\" render={this.renderSignUpPage} />\n            <Route path=\"/history\" render={this.renderHistory} />\n\n            <Route path=\"/users/:slug\" render={(routerProps) =>{\n            let user = this.state.users.find(user => user.id == routerProps.match.params.slug)\n            return user? <UserHome user={user} users={this.state.users} records={this.state.records} nums={this.state.records.length} content1={\"Recently Bought\"} content2={\"Currently Selling\"} size={200} page={this.state.page} handleTabClick={this.handleTabClick} handleRightClick = {this.handleRightClick} handleLeftClick = {this.handleLeftClick} user1Page={this.state.user1Page} sell_records={this.state.sell_records} user2Page={this.state.user2Page} /> :null\n          }}\n          />\n\n\n            <Route path=\"/records/:slug\" render={(routerProps) => {\n                        return <RecordPage record_id={routerProps.match.params.slug} records={this.state.records}\n                                           handleClick={this.handleClick}\n                                           cover={this.state.cover} handleRightClick={this.handleRightClick}\n                                           handleLeftClick={this.handleLeftClick} sell_records={this.state.sell_records} user={this.state.user} deleteRecord={this.deleteRecord} changeCartStatus={this.changeCartStatus}\n                                           addToCart={this.addToCart} recordPage={this.state.recordPage}/>\n                    }}/>  \n\n\n            {/* {!this.state.user.id && <Redirect to=\"/login\" />} */}\n\n            <Route path=\"/cart/:slug\" render={(routerProps) =>{\n              debugger\n            let user = this.state.users.find(u => u.id == routerProps.match.params.slug)\n            return user? <Cart user={user} deleteRecord={this.deleteRecord} changeCartStatus={this.changeCartStatus} />:null}}/>\n\n          \n            \n            <Route exact path=\"/friends\" component={Friends}/>\n            <Route component={NotFound} />\n            \n        </Switch>\n        <Footer/>\n    </div>\n  );}\n\n}\n\nexport default withRouter(MainContainer);\n\n"]},"metadata":{},"sourceType":"module"}