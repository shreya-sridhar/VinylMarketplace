{"ast":null,"code":"var _jsxFileName = \"/home/shreyamohak/vinyl/vinyl-mp-frontend/vinyl-mp-frontend/src/containers/MainContainer.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Footer from '../components/Footer.js';\nimport RecordPage from './RecordPage.js';\nimport NavBar from \"./NavBar\";\nimport NotFound from \"../components/NotFound\";\nimport Main from \"../pages/main/Main\";\nimport Messages from \"../pages/main/Messages\";\nimport Login from \"./Login\";\nimport History from \"./History\";\nimport Cart from \"./Cart\";\nimport UserHome from \"../containers/UserHome\";\nimport Friends from \"./ChatFriends\";\nimport AllRecords from \"../pages/all-records/AllRecords\";\nimport { Route, Switch, Redirect, Link } from \"react-router-dom\";\nimport { withRouter } from 'react-router';\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"../components/Globalstyle\";\nimport { lightTheme, darkTheme } from \"../components/Themes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API = \"http://localhost:3001/\";\n\nclass MainContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      records: [],\n      users: [],\n      sell_records: [],\n      cover: [true, \"View List Of Songs\"],\n      page: 1,\n      recordPage: 0,\n      user1Page: 0,\n      user2Page: 0,\n      user: {},\n      error: false,\n      orders: [],\n      order_records: [],\n      redirect: false\n    };\n\n    this.themeToggler = theme => {\n      if (theme === 'light') {\n        theme: 'dark';\n      } else {\n        theme;\n      }\n    };\n\n    this.downloadUsers = () => {\n      fetch(\"http://localhost:3001/users\").then(res => res.json()).then(data1 => fetch(\"http://localhost:3001/records\").then(res => res.json()).then(data2 => fetch(\"http://localhost:3001/sell_records\").then(res => res.json()).then(data3 => fetch(\"http://localhost:3001/order_records\").then(res => res.json()).then(data4 => fetch(\"http://localhost:3001/orders\").then(res => res.json()).then(data5 => {\n        this.setState({\n          users: data1,\n          records: data2,\n          sell_records: data3,\n          order_records: data4,\n          orders: data5\n        });\n      })))));\n    };\n\n    this.persistUser = token => {\n      debugger;\n      fetch(API + `profile`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(resp => resp.json()).then(data => {\n        debugger;\n\n        if (data.user) {\n          const {\n            username,\n            id\n          } = data.user;\n          this.setState({\n            user: {\n              username,\n              id\n            }\n          });\n        }\n      });\n    };\n\n    this.handleTabClick = tab => {\n      let newPage;\n\n      if (tab === \"friends\") {\n        newPage = 2;\n      } else if (tab === \"favorites\") {\n        newPage = 3;\n      } else {\n        newPage = 1;\n      }\n\n      this.setState({\n        page: newPage\n      });\n    };\n\n    this.handleClick = () => {\n      let newCover = !this.state.cover[0];\n      let newTitle;\n\n      if (this.state.cover[1] === \"View Album Cover\") {\n        newTitle = \"View List Of Songs\";\n      } else {\n        newTitle = \"View Album Cover\";\n      }\n\n      this.setState({\n        cover: [newCover, newTitle]\n      });\n    };\n\n    this.handleRightClick = (pg, n) => {\n      let changePage = pg + `Page`;\n      let pageNum = this.state[changePage] + 4;\n\n      if (pageNum >= n) {\n        pageNum = 0;\n      }\n\n      this.setState({\n        [`${changePage}`]: pageNum\n      });\n    };\n\n    this.handleLeftClick = (pg, n) => {\n      let changePage = pg + `Page`;\n      let pageNum = this.state[changePage] - 4;\n\n      if (pageNum <= 0) {\n        pageNum = n - 4;\n      }\n\n      this.setState({\n        [`${changePage}`]: pageNum\n      });\n    };\n\n    this.setRedirect = () => {\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.addToCart = rec => {\n      if (!localStorage.token) {\n        alert('Please login before adding to cart');\n      } else {\n        alert(rec.name + ' has been added to your cart!');\n        let user_find = this.state.orders.filter(order => order.user.id === this.state.user.id && order.status === 'in_cart'); // change to single element later\n\n        if (user_find.length === 0) {\n          debugger;\n          fetch(\"http://localhost:3001/orders\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              user_id: this.state.user.id,\n              status: 'in_cart',\n              total_sum: 0.0\n            })\n          }).then(resp => resp.json()).then(data => {\n            debugger; // let newOrders = this.state.order.concat(data)\n            // this.setState({orders:newOrders})\n\n            this.createOrderRecord(data);\n          });\n        } else {\n          debugger;\n          this.createOrderRecord(rec);\n        }\n      }\n    };\n\n    this.createOrderRecord = rec => {\n      debugger;\n      let currOrder = this.state.orders.filter(order => order.user.id === this.state.user.id && order.status === 'in_cart')[0];\n      debugger; // change to single element later\n\n      fetch(\"http://localhost:3001/order_records\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          order_id: currOrder.id,\n          record_id: rec.id\n        })\n      }).then(resp => resp.json()).then(data => {\n        this.downloadUsers();\n      });\n    };\n\n    this.handleAuthResponse = data => {\n      if (data.message === \"Invalid username or password\") {\n        this.props.history.push(\"/signup\");\n      } else {\n        if (data.user) {\n          const {\n            username,\n            id\n          } = data.user;\n          const token = data.jwt;\n          this.setState({\n            user: {\n              username,\n              id\n            },\n            error: null\n          });\n          localStorage.setItem(\"token\", token);\n          this.props.history.push(\"/records\");\n        } else if (data.error) {\n          this.setState({\n            error: data.error\n          });\n        }\n      }\n    };\n\n    this.handleLogin = (e, user) => {\n      e.preventDefault();\n      fetch(API + `login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: user.username,\n          password: user.password,\n          bio: \"\"\n        })\n      }).then(resp => resp.json()).then(data => {\n        this.handleAuthResponse(data);\n      }).catch(console.log);\n    };\n\n    this.handleSignup = (e, user) => {\n      e.preventDefault();\n      fetch(API + `/signup`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user: user\n        })\n      }).then(resp => resp.json()).then(data => {\n        this.handleAuthResponse(data);\n      }).catch(console.log);\n    };\n\n    this.handleLogout = () => {\n      localStorage.clear();\n      this.setState({\n        user: {}\n      });\n    };\n\n    this.sendMessage = (e, state) => {\n      fetch(\"http://localhost:3002/messages\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          content: state.message\n        })\n      }).then(resp => resp.json()).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.renderLoginPage = () => /*#__PURE__*/_jsxDEV(Login, {\n      handleLoginOrSignup: this.handleLogin,\n      act: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 29\n    }, this);\n\n    this.renderSignUpPage = () => /*#__PURE__*/_jsxDEV(Login, {\n      handleLoginOrSignup: this.handleSignup,\n      act: \"signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 30\n    }, this);\n\n    this.renderMessages = () => /*#__PURE__*/_jsxDEV(Messages, {\n      sendMessage: this.sendMessage,\n      user: this.state.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 28\n    }, this);\n\n    this.renderHistory = () => /*#__PURE__*/_jsxDEV(History, {\n      order_records: this.state.order_records\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 27\n    }, this);\n\n    this.changeCartStatus = () => {\n      let order_find = this.state.orders.find(order => order.user.id === this.state.user.id && order.status === 'in_cart').id; // change to single element later\n\n      fetch(`http://localhost:3001/orders/${order_find}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          status: \"complete\"\n        })\n      }).then(resp => resp.json()).then(data => console.log);\n    };\n\n    this.deleteRecord = order_rec => {\n      fetch(`http://localhost:3001/order_records/${order_rec.id}`, {\n        method: 'DELETE'\n      }).then(res => res.json()).then(res => {\n        this.downloadUsers();\n      });\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.token;\n\n    if (token) {\n      this.persistUser(token);\n    }\n\n    this.downloadUsers();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme === 'light' ? lightTheme : darkTheme,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n            user: this.state.user,\n            handleLogout: this.handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              component: Main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/messages\",\n              render: this.renderMessages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/records\",\n              component: AllRecords\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              render: this.renderLoginPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/signup\",\n              render: this.renderSignUpPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/history\",\n              render: this.renderHistory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/users/:slug\",\n              render: routerProps => {\n                let user = this.state.users.find(user => user.id == routerProps.match.params.slug);\n                return user ? /*#__PURE__*/_jsxDEV(UserHome, {\n                  user: user,\n                  users: this.state.users,\n                  records: this.state.records,\n                  nums: this.state.records.length,\n                  content1: \"Recently Bought\",\n                  content2: \"Currently Selling\",\n                  size: 200,\n                  page: this.state.page,\n                  handleTabClick: this.handleTabClick,\n                  handleRightClick: this.handleRightClick,\n                  handleLeftClick: this.handleLeftClick,\n                  user1Page: this.state.user1Page,\n                  sell_records: this.state.sell_records,\n                  user2Page: this.state.user2Page\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 39\n                }, this) : null;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/records/:slug\",\n              render: routerProps => {\n                return /*#__PURE__*/_jsxDEV(RecordPage, {\n                  record_id: routerProps.match.params.slug,\n                  records: this.state.records,\n                  handleClick: this.handleClick,\n                  cover: this.state.cover,\n                  handleRightClick: this.handleRightClick,\n                  handleLeftClick: this.handleLeftClick,\n                  sell_records: this.state.sell_records,\n                  user: this.state.user,\n                  deleteRecord: this.deleteRecord,\n                  changeCartStatus: this.changeCartStatus,\n                  addToCart: this.addToCart,\n                  recordPage: this.state.recordPage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 32\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/cart/:slug\",\n              render: routerProps => {\n                let user = this.state.users.find(u => u.id == routerProps.match.params.slug);\n                return user ? /*#__PURE__*/_jsxDEV(Cart, {\n                  user: user,\n                  deleteRecord: this.deleteRecord,\n                  changeCartStatus: this.changeCartStatus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 39\n                }, this) : null;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/friends\",\n              component: Friends\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              component: NotFound\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(MainContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/shreyamohak/vinyl/vinyl-mp-frontend/vinyl-mp-frontend/src/containers/MainContainer.js"],"names":["React","Footer","RecordPage","NavBar","NotFound","Main","Messages","Login","History","Cart","UserHome","Friends","AllRecords","Route","Switch","Redirect","Link","withRouter","ThemeProvider","GlobalStyles","lightTheme","darkTheme","API","MainContainer","Component","state","records","users","sell_records","cover","page","recordPage","user1Page","user2Page","user","error","orders","order_records","redirect","themeToggler","theme","downloadUsers","fetch","then","res","json","data1","data2","data3","data4","data5","setState","persistUser","token","method","headers","Authorization","resp","data","username","id","handleTabClick","tab","newPage","handleClick","newCover","newTitle","handleRightClick","pg","n","changePage","pageNum","handleLeftClick","setRedirect","renderRedirect","addToCart","rec","localStorage","alert","name","user_find","filter","order","status","length","body","JSON","stringify","user_id","total_sum","createOrderRecord","currOrder","order_id","record_id","handleAuthResponse","message","props","history","push","jwt","setItem","handleLogin","e","preventDefault","password","bio","catch","console","log","handleSignup","handleLogout","clear","sendMessage","content","renderLoginPage","renderSignUpPage","renderMessages","renderHistory","changeCartStatus","order_find","find","deleteRecord","order_rec","componentDidMount","render","routerProps","match","params","slug","u"],"mappings":"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","sourcesContent":["import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Footer from '../components/Footer.js'\nimport RecordPage from './RecordPage.js'\nimport NavBar from \"./NavBar\"\nimport NotFound from \"../components/NotFound\"\nimport Main from \"../pages/main/Main\"\nimport Messages from \"../pages/main/Messages\"\nimport Login from \"./Login\"\nimport History from \"./History\"\nimport Cart from \"./Cart\"\nimport UserHome from \"../containers/UserHome\"\nimport Friends from \"./ChatFriends\"\nimport AllRecords from \"../pages/all-records/AllRecords\";\nimport {Route, Switch, Redirect, Link} from \"react-router-dom\";\nimport {withRouter} from 'react-router'\nimport {ThemeProvider} from \"styled-components\";\nimport { GlobalStyles } from \"../components/Globalstyle\";\nimport { lightTheme, darkTheme } from \"../components/Themes\"\n\nconst API = \"http://localhost:3001/\"\n\nclass MainContainer extends React.Component {\n\n    state = {\n        records: [],\n        users: [],\n        sell_records: [],\n        cover:[true,\"View List Of Songs\"],\n        page: 1,\n        recordPage: 0,\n        user1Page: 0,\n        user2Page: 0,\n        user: {},\n        error: false,\n        orders: [],\n        order_records: [],\n        redirect: false,\n    }\n\n    themeToggler = (theme) => {\n        if (theme === 'light') \n        {\n            theme: 'dark'\n        }\n        else{\n            theme\n        } \n    }\n\n    downloadUsers = () => {\n        fetch(\"http://localhost:3001/users\")\n            .then(res => res.json())\n            .then(data1 => fetch(\"http://localhost:3001/records\")\n                .then(res => res.json())\n                .then(data2 => fetch(\"http://localhost:3001/sell_records\")\n                    .then(res => res.json())\n                    .then(data3 => fetch(\"http://localhost:3001/order_records\")\n                        .then(res => res.json())\n                        .then(data4 => fetch(\"http://localhost:3001/orders\")\n                            .then(res => res.json())\n                            .then(data5 => {\n                                    this.setState(\n                                        {\n                                            users: data1,\n                                            records: data2,\n                                            sell_records: data3,\n                                            order_records: data4,\n                                            orders: data5\n                                        })\n                                }\n                            )\n                        ))))\n    }\n\n    componentDidMount() {\n        const token = localStorage.token;\n        if (token) {\n            this.persistUser(token);\n        }\n\n        this.downloadUsers()\n    }\n\n    persistUser = (token) => {\n        debugger\n        fetch(API + `profile`, {\n            method: \"GET\",\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n        })\n            .then((resp) => resp.json())\n            .then((data) => {\n                debugger\n                if (data.user) {\n                    const {username, id} = data.user;\n                    this.setState({\n                        user: {\n                            username,\n                            id,\n                        },\n                    });\n                }\n            });\n    };\n\n\n    handleTabClick = (tab) => {\n        let newPage\n        if (tab === \"friends\") {\n            newPage = 2\n        } else if (tab === \"favorites\") {\n            newPage = 3\n        } else {\n            newPage = 1\n        }\n        this.setState({\n            page: newPage\n        })\n    }\n\n    handleClick = () => {\n        let newCover = !this.state.cover[0]\n        let newTitle\n        if (this.state.cover[1] === \"View Album Cover\") {\n            newTitle = \"View List Of Songs\"\n        } else {\n            newTitle = \"View Album Cover\"\n        }\n        this.setState({\n            cover: [newCover, newTitle]\n        })\n    }\n\n    handleRightClick = (pg, n) => {\n        let changePage = pg + `Page`\n        let pageNum = this.state[changePage] + 4\n        if (pageNum >= n) {\n            pageNum = 0\n        }\n        this.setState({\n            [`${changePage}`]: pageNum\n        })\n    }\n\n    handleLeftClick = (pg, n) => {\n        let changePage = pg + `Page`\n        let pageNum = this.state[changePage] - 4\n        if (pageNum <= 0) {\n            pageNum = n - 4\n        }\n        this.setState({\n            [`${changePage}`]: pageNum\n        })\n    }\n\n    setRedirect = () => {\n        this.setState({\n            redirect: true\n        })\n    }\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect to='/login'/>\n        }\n    }\n\n    addToCart = (rec) => {\n        if (!localStorage.token) {\n            alert('Please login before adding to cart');\n        } else {\n            alert(rec.name + ' has been added to your cart!');\n            let user_find = this.state.orders.filter((order) => order.user.id === this.state.user.id && order.status === 'in_cart')\n            // change to single element later\n            if (user_find.length === 0) {\n                debugger\n                fetch(\"http://localhost:3001/orders\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify({user_id: this.state.user.id, status: 'in_cart', total_sum: 0.0}),\n                })\n                    .then((resp) => resp.json())\n                    .then((data) => {\n                        debugger\n                        // let newOrders = this.state.order.concat(data)\n                        // this.setState({orders:newOrders})\n                        this.createOrderRecord(data);\n                    })\n            } else {\n                debugger\n                this.createOrderRecord(rec);\n            }\n        }\n    }\n\n\n    createOrderRecord = (rec) => {\n        debugger\n        let currOrder = this.state.orders.filter((order) => order.user.id === this.state.user.id && order.status === 'in_cart')[0]\n        debugger\n        // change to single element later\n        fetch(\"http://localhost:3001/order_records\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({order_id: currOrder.id, record_id: rec.id}),\n        })\n            .then((resp) => resp.json())\n            .then((data) => {\n                this.downloadUsers()\n            })\n    }\n\n\n    handleAuthResponse = (data) => {\n        if (data.message === \"Invalid username or password\") {\n            this.props.history.push(\"/signup\");\n        } else {\n            if (data.user) {\n                const {username, id} = data.user;\n                const token = data.jwt\n                this.setState({\n                    user: {\n                        username,\n                        id,\n                    },\n                    error: null,\n                });\n\n                localStorage.setItem(\"token\", token);\n                this.props.history.push(\"/records\");\n            } else if (data.error) {\n                this.setState({\n                    error: data.error,\n                });\n            }\n        }\n    };\n\n    handleLogin = (e, user) => {\n        e.preventDefault();\n        fetch(API + `login`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({username: user.username, password: user.password, bio: \"\"}),\n        })\n            .then((resp) => resp.json())\n            .then((data) => {\n                this.handleAuthResponse(data);\n            })\n            .catch(console.log);\n    };\n\n    handleSignup = (e, user) => {\n        e.preventDefault();\n\n        fetch(API + `/signup`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({user: user}),\n        })\n            .then((resp) => resp.json())\n            .then((data) => {\n                this.handleAuthResponse(data);\n            })\n            .catch(console.log);\n    };\n\n    handleLogout = () => {\n        localStorage.clear();\n        this.setState({user: {}});\n    };\n\n    sendMessage = (e, state) => {\n\n        fetch(\"http://localhost:3002/messages\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n\n            },\n            body: JSON.stringify({content: state.message}),\n        })\n            .then((resp) => resp.json())\n            .then((data) => {\n\n                console.log(data)\n            })\n    }\n\n    renderLoginPage = () => <Login handleLoginOrSignup={this.handleLogin} act=\"login\"/>;\n    renderSignUpPage = () => <Login handleLoginOrSignup={this.handleSignup} act=\"signup\"/>;\n    renderMessages = () => <Messages sendMessage={this.sendMessage} user={this.state.user}/>\n    renderHistory = () => <History order_records={this.state.order_records}/>\n\n    changeCartStatus = () => {\n        let order_find = this.state.orders.find((order) => order.user.id === this.state.user.id && order.status === 'in_cart').id\n        // change to single element later\n\n        fetch(`http://localhost:3001/orders/${order_find}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({status: \"complete\"}),\n        })\n            .then((resp) => resp.json())\n            .then((data) =>\n                console.log)\n    }\n\n    deleteRecord = (order_rec) => {\n\n        fetch(`http://localhost:3001/order_records/${order_rec.id}`, {\n            method: 'DELETE',\n        })\n            .then(res => res.json())\n            .then(res => {\n                this.downloadUsers()\n            })\n    }\n\n\n    render() {\n        return (\n            <div>\n                 <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n                <>\n                <GlobalStyles/>\n                <NavBar user={this.state.user}\n                        handleLogout={this.handleLogout}\n                />\n                <Switch>\n                    <Route exact path=\"/\" component={Main}/>\n                    <Route exact path=\"/messages\" render={this.renderMessages}/>\n                    <Route exact path=\"/records\" component={AllRecords}/>\n\n                    <Route path=\"/login\" render={this.renderLoginPage}/>\n                    <Route path=\"/signup\" render={this.renderSignUpPage}/>\n                    <Route path=\"/history\" render={this.renderHistory}/>\n\n                    <Route path=\"/users/:slug\" render={(routerProps) => {\n                        let user = this.state.users.find(user => user.id == routerProps.match.params.slug)\n                        return user ? <UserHome user={user} users={this.state.users} records={this.state.records}\n                                                nums={this.state.records.length} content1={\"Recently Bought\"}\n                                                content2={\"Currently Selling\"} size={200} page={this.state.page}\n                                                handleTabClick={this.handleTabClick}\n                                                handleRightClick={this.handleRightClick}\n                                                handleLeftClick={this.handleLeftClick} user1Page={this.state.user1Page}\n                                                sell_records={this.state.sell_records}\n                                                user2Page={this.state.user2Page}/> : null\n                    }}\n                    />\n\n\n                    <Route path=\"/records/:slug\" render={(routerProps) => {\n                        return <RecordPage record_id={routerProps.match.params.slug}\n                                           records={this.state.records}\n                                           handleClick={this.handleClick}\n                                           cover={this.state.cover}\n                                           handleRightClick={this.handleRightClick}\n                                           handleLeftClick={this.handleLeftClick}\n                                           sell_records={this.state.sell_records}\n                                           user={this.state.user}\n                                           deleteRecord={this.deleteRecord}\n                                           changeCartStatus={this.changeCartStatus}\n                                           addToCart={this.addToCart}\n                                           recordPage={this.state.recordPage}/>\n                    }}/>\n\n\n                    {/* {!this.state.user.id && <Redirect to=\"/login\" />} */}\n\n                    <Route path=\"/cart/:slug\" render={(routerProps) => {\n                        let user = this.state.users.find(u => u.id == routerProps.match.params.slug)\n                        return user ? <Cart user={user} deleteRecord={this.deleteRecord}\n                                            changeCartStatus={this.changeCartStatus}/> : null\n                    }}/>\n\n\n                    <Route exact path=\"/friends\" component={Friends}/>\n                    <Route component={NotFound}/>\n\n                </Switch>\n                <Footer/>\n                </>\n    </ThemeProvider>\n            </div>\n        );\n    }\n\n}\n\nexport default withRouter(MainContainer);\n\n"]},"metadata":{},"sourceType":"module"}